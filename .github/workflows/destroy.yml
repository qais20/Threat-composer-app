name: Destroy Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm destruction'
        required: true
        default: 'no'

permissions:
  contents: read

jobs:
  terraform_static_analysis:
    name: 'Terraform Static Analysis'
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  terraform_destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: terraform_static_analysis
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirmation == 'yes'
    steps:
      - uses: actions/checkout@v2

      # Debugging step to check if secrets are loaded correctly
      - name: Check Secrets Loaded
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then echo "AWS_ACCESS_KEY_ID is not set"; else echo "AWS_ACCESS_KEY_ID is set"; fi
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then echo "AWS_SECRET_ACCESS_KEY is not set"; else echo "AWS_SECRET_ACCESS_KEY is set"; fi

      # Add AWS Credentials Configuration Step
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Terraform Destroy
        working-directory: terraform
        run: |
          pwd
          ls -la  
          terraform init  
          terraform destroy --target=aws_route53_record.tm_cname_record --auto-approve
          terraform destroy --auto-approve

      # Test S3 Access
      - name: Test S3 Access
        run: |
          aws s3 ls s3://your-bucket-name --region eu-west-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
