name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: eu-west-2

      # Fetch the AWS Account ID and set it as an output variable
      - name: Get AWS Account ID
        id: aws_account
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "::set-output name=account_id::$ACCOUNT_ID"
      
      # Set ECR registry URL based on the retrieved AWS account ID
      - name: Set ECR Registry URL
        run: |
          echo "ECR_REGISTRY=${{ steps.aws_account.outputs.account_id }}.dkr.ecr.eu-west-2.amazonaws.com" >> $GITHUB_ENV

      # Ensure the ECR repository exists
      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names my-app || \
          aws ecr create-repository --repository-name my-app

      - name: Build Docker image
        run: |
          docker build -t my-app:latest .
          docker tag my-app:latest ${{ env.ECR_REGISTRY }}/my-app:latest


      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/my-app:latest
